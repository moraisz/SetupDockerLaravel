FROM php:8.3-fpm

ARG user=your_system_user
ARG uid=1000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libpq-dev \
    zip \
    unzip \
    nginx \
    supervisor

# Install nodejs
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    apt-get install -y nodejs

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install \
    pdo_pgsql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    sockets

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
RUN useradd -m -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

# Adjust permissions for nginx
RUN mkdir -p /run/nginx \
    && chmod 777 /run
RUN mkdir -p /var/lib/nginx \
    && chown -R www-data:www-data /var/lib/nginx \
    && chown -R www-data:www-data /var/log/nginx \
    && chmod -R 775 /var/lib/nginx \
    && chmod -R 775 /var/log/nginx

# Set working directory
WORKDIR /var/www
COPY . /var/www

# Copy custom configurations PHP and Nginx
COPY docker/php/custom.ini /usr/local/etc/php/conf.d/custom.ini
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf

# Copy shell file and supervisord
COPY ./docker/supervisord.conf /etc/supervisor/supervisord.conf

USER $user

# Run shell file
ENTRYPOINT ["/var/www/docker/start.sh"]
